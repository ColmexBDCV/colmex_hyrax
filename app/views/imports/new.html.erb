
<div id="app">    
  <div class="row" >
      <div class="col-md-12">
          <div class="panel panel-default">
              <div class="panel-heading">
                  <h1><span class="fa fa-check" aria-hidden="true"></span> <%= t('hyrax.admin.imports.new_import') %></h1>
              </div>
              <div class="panel panel-body">
                  <h1>Paquetes por procesar</h1>
              <div>
              <%
                  workTypes = []
                  Hyrax::config.registered_curation_concern_types.each do |wt|
                      workTypes.append ([t('hyrax.admin.validations.'+wt.underscore.downcase), wt])
                  end
              %>
                  <table class="table">
                  <thead>
                      <tr>
                      <th> Nombre del paquete </th>
                      
                      <th> Peso (MB) </th>
                      <th> </th>
                      </tr>
                  </thead>
                  <tbody>
                      <% @sips.each_with_index do |s, index| %>
                          <tr>
                          <td><%= s[:sip] %></td>
                          <td><%= s[:size] %></td>
                          <td> 
                              <select class="form-select btn btn-default dropdown-toggle" id="select_<%=index%>" @change="change_select('select_<%=index%>')" aria-label="Default select example">
                                  <option value="" selected>Seleccionar tipo de obra</option>
                                  <%= render partial: "work_types", locals: {work_types: workTypes} %>
                              </select>
                              <input class="form-check-input" type="checkbox" id="chk_<%=index%>">
                              <label class="form-check-label" for="flexCheckDefault">
                                  Validar pertinencia para el RepNal
                              </label>
                              <button id="<%=s[:sip]%>" role="button" class="btn btn-primary custom-modal" 
                                  @click="validar('<%=s[:sip]%>', '<%=index%>', '<%=s[:size]%>' )" disabled data-toggle="modal">Procesar</button>
                          </td>
                          </tr>
                      <% end %>                                  
                  </tbody>
                  </table>
              </div>
              </div>
          </div>
      </div>
  </div>
  <div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal">
            <span aria-hidden="true">×</span>
          </button>
          <h2 class="modal-title" id="myModalLabel">
            Reporte del SIP&nbsp;{{modal_text}}
          </h2>           
        </div>
        <div class="modal-body">
          <div v-if="is_loading">
            <h3 v-if="!import_success"><i class="fa fa-cogs"></i>&nbsp;&nbsp;Procesando Paquete (puede tardar varios minutos)...</h3>
            <div class="progress" style="margin-top: 10px;">
              <div class="progress-bar progress-bar-striped active" aria-pressed="true" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 100%">
                <span class="sr-only"></span>
              </div>
            </div>
          </div>
          <div v-else>          
            <div v-if="is_success">
              <div class="success">
                <h3 v-if="!import_success"><i class="fa fa-check-circle"></i>&nbsp;&nbsp;La validación ha sido existosa, puede iniciar la importación.</h3>
                <h3 v-if="import_success"><i class="fa fa-check-circle"></i>&nbsp;&nbsp;La importación ha comenzado...
                  <div v-show="!import_success" class="progress" style="margin-top: 10px;">
                    <div class="progress-bar progress-bar-striped active" aria-pressed="true" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 100%">
                      <span class="sr-only"></span>
                    </div>
                  </div>
                </h3>
              </div>
            </div>
            <div v-else>
              <div class="error">
                <h3><i class="fa fa-times-circle"></i>&nbsp;&nbsp;Se encontraron los siguientes errores al procesar la petición.</h3>
              </div>
              <div class="list-group">
                <div v-for="(errors, key) in result">
                  <div v-if="error_size > 1">
                    <div>
                      <div class="list-group-item active">
                        <span class="badge">{{errors.length}}</span>
                        {{key}}
                      </div>
                    </div>
                    <div v-for="value in errors">
                      <div v-if="get_type(value) == 'object'">
                          <div class="list-group-item"><i class="fa fa-times"></i>&nbsp;&nbsp;<b>Fila:</b> {{value[0]}}&nbsp;&nbsp;<b>Valor:</b>&nbsp;{{value[1].join(" | ")}}</div>
                      </div>
                      <div v-else>
                        <div class="list-group-item"><i class="fa fa-times"></i>&nbsp;&nbsp;{{value}}</div>
                      </div>
                    </div>
                  </div>
                  <div v-else>
                    <div v-if="get_type(errors) == 'object'">
                      <div>
                        <div class="list-group-item active">
                          <span class="badge">{{errors.length}}</span>
                          {{key}}
                        </div>
                      </div>
                      <div v-for="value in errors">
                        <div v-if="get_type(value) == 'object'">
                          <div class="list-group-item"><i class="fa fa-times"></i>&nbsp;&nbsp;<b>Fila:</b> {{value[0]}}&nbsp;&nbsp;<b>Valor:</b>&nbsp;{{value[1][0]}}</div>
                        </div>
                        <div v-else>
                          <div class="list-group-item"><i class="fa fa-times"></i>&nbsp;&nbsp;{{value}}</div>
                        </div>                      
                      </div>                   
                    </div>
                    <div v-else>
                      <div>
                        <div class="list-group-item active">
                          {{key}}
                        </div>
                      </div>
                      <div>
                        <div class="list-group-item"><i class="fa fa-times"></i>&nbsp;&nbsp;{{errors}}</div>
                      </div>
                    </div>                  
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" v-show="is_success && !import_success" @click="send_import" class="btn btn-lg btn-primary">Importar</button>
           <button type="button" v-show="import_success" @click="history_redirect" class="btn btn-lg btn-primary">Ir a historial</button>
          <button type="button" v-show="!is_success" class="btn btn-lg btn-secondary" data-dismiss="modal">Cerrar</button>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
    .fa-times{
      color: rgb(184, 72, 72);
    }
    .fa-times-circle{
      color: rgb(184, 72, 72);
      font-size: 24px;
    }
    .fa-check-circle{
      color: rgb(22, 128, 18);
      font-size: 24px;
    }
    .success{
      border-top: rgb(22, 128, 18) solid 1px;
      border-bottom: rgb(22, 128, 18) solid 1px;
    } 
    .error{
      border-top: rgb(184, 72, 72) solid 1px;
      border-bottom: rgb(184, 72, 72) solid 1px;
    }
</style>
<script>

  Vue.config.devtools = true
  var app = new Vue({
    el: '#app',
    data() {
        return {
          modal_text: '',
          modal_resp: '',
          modalShow: false,
          result: '',
          import_sip: '',
          is_success: false,
          error_size: 1,
          name: '',
          import_success: false,
          is_loading: true,
        }
      },
    methods: {
      /**
       * Envia lo datos para validar la informacion y obtiene si estan correctos o no.
       **/ 
      validar(sip, id, size){
        this.is_loading = true;
        var that = this;
        var worktype = $('#select_'+id).val();
        var repnal = $('#chk_'+id).is(":checked");
        var params = { sip: sip, work: worktype};
        if (repnal) {
          params["repnal"] = "true"
        }
        that.modal_text = sip;
        $.post("/imports/validate",
          params,
          function(data, status, xhr) {
            if (data.hasOwnProperty('success')) {
              that.import_sip = {import:{ name: sip, object_type: worktype, identifiers: data["success"], storage_size: size }}
              if (repnal) {
                that.import_sip["import"]["repnal"] = "true"
              }
              //console.log(that.import_sip);
              that.is_success = true;
              that.is_loading = false;

          } else {
            // console.log(data)
            that.result = eval(data);
            that.error_size = Object.keys(that.result).length;
            that.is_success = false;
            that.is_loading = false;
          }   
        }).fail(function(jqxhr, settings, ex) { console.log('failed, ' + ex); });
        $('#myModal').modal('show');
      },
      /**
       * Habilita y deshabilita el select al cambiar de valor para efectuar la validacion
       **/ 
      change_select(select_index){
        if ($('#'+select_index).val() != '')  {
          $('#'+select_index).next().next().next().prop('disabled', false)      
        }else{
          $('#'+select_index).next().next().next().prop('disabled', true)
        }
      },
      /**
       * Evalua el tipo de dato para saber si volver a iterar o imprimir
       **/ 
      get_type(value){
        //console.log("Tipo: " + typeof value + "  Valor: "+ value);
        return typeof value;
      },
      /**
       * Metodo para enviar la peticion de importacion
       **/ 
      send_import(){
        this.is_loading = true;
        var that = this;
        //that.import_success = true;     
        $.post("/imports.json",
          that.import_sip,
          function(data, status, xhr) {
            if(data.hasOwnProperty('id')) {
              that.import_success = true;
              that.is_loading = false;
              setTimeout(function () {
                window.location.replace("/imports");
              }, 10000);
            }
        }).fail(function(jqxhr, settings, ex) { console.log('failed, ' + ex); });
      },
      history_redirect(){
        window.location.replace("/imports");
      }
    }
  })    
</script>
