<h1>Mapa y Línea de Tiempo de Registros</h1>

<div id="mapid" style="height: 500px; width: 100%; position: relative;"></div>
<div id="timeline" style="height: 200px; width: 100%;"></div>

<!-- Spinner -->
<div id="spinner" style="display:flex; align-items:center; justify-content:center; position:fixed; top:0; left:0; width:100%; height:100%; background:rgba(255,255,255,0.7); z-index:9999;">
  <div class="loader"></div>
</div>

<style>
  .loader {
    border: 8px solid #f3f3f3;
    border-top: 8px solid #3498db;
    border-radius: 50%;
    width: 60px;
    height: 60px;
    animation: spin 1s linear infinite;
  }
  @keyframes spin {
    0%   { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  .leaflet-popup-content {
    margin: 13px 24px 13px 20px;
    line-height: 1.3;
    font-size: 20px !important;
    font-size: 1.08333em;
    min-height: 1px;
  }

  #spinner {
  visibility: visible;
  opacity: 1;
  transition: opacity 0.3s ease;
  display: flex; 
  align-items: center; 
  justify-content: center; 
  position: fixed; 
  top: 0; left: 0; 
  width: 100%; height: 100%; 
  background: rgba(255,255,255,0.7); 
  z-index: 9999;
}

</style>

<script>
  document.addEventListener('turbolinks:load', function() {
    var data = <%= raw @data.to_json %>;

    // -------- SPINNER --------
    function showSpinner() {
      var el = document.getElementById("spinner");
      el.style.visibility = "visible";
      el.style.opacity = "1";
    }

    function hideSpinner() {
      var el = document.getElementById("spinner");
      el.style.opacity = "0";
      setTimeout(() => { el.style.visibility = "hidden"; }, 300);
    }

    // -------- CONFIGURACIÓN LEAFLET --------
    L.Icon.Default.imagePath = "";
    var defaultIcon = new L.Icon({
      iconRetinaUrl: '<%= image_path("marker-icon-2x.png") %>',
      iconUrl: '<%= image_path("marker-icon.png") %>',
      shadowUrl: '<%= image_path("marker-shadow.png") %>',
      iconSize: [25, 41],
      iconAnchor: [12, 41],
      popupAnchor: [1, -34],
      shadowSize: [41, 41]
    });

    var mymap = L.map('mapid').setView([20, 0], 2);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(mymap);

    var mapMarkers = {};
    function renderMarkers(records) {
      Object.values(mapMarkers).forEach(m => mymap.removeLayer(m));
      mapMarkers = {};
      records.forEach(function(item) {
        if (item.lat && item.lon) {
          var marker = L.marker([item.lat, item.lon], {icon: defaultIcon})
            .addTo(mymap)
            .bindPopup('<b>' + item.title + '</b><br>' + item.date);
          mapMarkers[item.id] = marker;
        }
      });
    }

    // -------- TIMELINE --------
    var timelineItems = new vis.DataSet();
    var container = document.getElementById('timeline');
    var options = {
      orientation: { axis: 'top' },
      showCurrentTime: true,
      stack: true,
      height: '200px',
      zoomMin: 31536000000,
      timeAxis: { scale: 'year' },
      format: { minorLabels: { year: 'YYYY' } }
    };
    var timeline = new vis.Timeline(container, timelineItems, options);

    // -------- FETCH DE DATOS --------
    function fetchData(startYear, endYear) {
      showSpinner();
      fetch(`/timeline_map.json?start_year=${startYear}&end_year=${endYear}`)
        .then(response => response.json())
        .then(newData => {
          renderMarkers(newData);

          timelineItems.clear();
          var yearCounts = {};
          newData.forEach(function(item) {
            var year = new Date(item.date).getUTCFullYear();
            if (!yearCounts[year]) yearCounts[year] = 0;
            yearCounts[year]++;
          });

          Object.keys(yearCounts).forEach(function(year) {
            timelineItems.add({
              id: parseInt(year, 10), // siempre número
              content: year + ' (' + yearCounts[year] + ')',
              start: new Date(Date.UTC(parseInt(year, 10), 5, 15))
            });
          });
        })
        .finally(() => {
          hideSpinner();
        });
    }

    // -------- EVENTOS --------
    // Solo spinner al cambiar el rango en la timeline
    timeline.on('rangechanged', function (props) {
      var startYear = props.start.getUTCFullYear();
      var endYear   = props.end.getUTCFullYear();
      fetchData(startYear, endYear);
    });

    // Al hacer click en un item de la timeline
    timeline.on('select', function (props) {
      if (props.items.length > 0) {
        var selectedYear = parseInt(props.items[0]);

        // Definir el rango del año completo
        var yearStart = new Date(Date.UTC(selectedYear, 1, 1));
        var yearEnd   = new Date(Date.UTC(selectedYear, 11, 31));

        // Ajustar la timeline a ese rango
        timeline.setWindow(yearStart, yearEnd, { animation: true });

        // Ahora también mostrar solo los marcadores de ese año
        Object.values(mapMarkers).forEach(function(marker) {
          mymap.removeLayer(marker);
        });

        var visibles = [];
        data.forEach(function(item) {
          var year = new Date(item.date).getUTCFullYear();
          if (year === selectedYear) {
            var marker = mapMarkers[item.id];
            marker.addTo(mymap);
            visibles.push(marker.getLatLng());
          }
        });

        if (visibles.length > 0) {
          mymap.fitBounds(L.latLngBounds(visibles));
        }
      }
    });
    


    // -------- CARGA INICIAL --------
    (function init() {
      showSpinner();

      renderMarkers(data);

      var yearCounts = {};
      data.forEach(function(item) {
        var year = new Date(item.date).getUTCFullYear();
        if (!yearCounts[year]) yearCounts[year] = 0;
        yearCounts[year]++;
      });
      Object.keys(yearCounts).forEach(function(year) {
        timelineItems.add({
          id: year,
          content: year + ' (' + yearCounts[year] + ')',
          start: new Date(Date.UTC(parseInt(year), 5, 15))
        });
      });

      var currentYear = new Date().getUTCFullYear();
      var windowStart = new Date(Date.UTC(currentYear - 5, 0, 1));
      var windowEnd   = new Date(Date.UTC(currentYear, 11, 31));
      timeline.setWindow(windowStart, windowEnd);

      hideSpinner();
    })();
  });
</script>
